import React, { useState } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import axios from 'axios';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü –∏ –≤–∏–¥–∂–µ—Ç–æ–≤
import Home from './pages/Home';
import MainPage from './components/MainPage';
import Login from './components/Login';
import EarthData from './components/EarthData';
import RegistrationModal from "./components/RegistrationModal";
import ProfileHeader from './components/ProfileHeader';
import Chat from './components/Chat';
import AgroFarmPage from './components/AgroFarmPage';
import Map from './components/Map';
import IntroModal from './components/IntroModal'; // –ø—É—Ç—å –∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É



// –ü—Ä–∏–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ AgroDashboard —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç API (–ø–æ–≥–æ–¥–∞/–ø–æ—á–≤–∞)
function AgroDashboard() {
  const [mode, setMode] = useState('weather');
  const [weather, setWeather] = useState(null);
  const [soil, setSoil] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const fetchData = () => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å ID –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π endpoint
    setLoading(true);
    setError('');
    axios
      .get(`http://localhost:8080/api/${mode}/yourPolygonIdHere`)
      .then((res) => {
        if (mode === 'weather') {
          setWeather(res.data);
          setSoil(null);
        } else {
          setSoil(res.data);
          setWeather(null);
        }
      })
      .catch(() => setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö'))
      .finally(() => setLoading(false));
  };

  const kelvinToCelsius = (k) => (k - 273.15).toFixed(1);

  return (
    <div
      style={{
        width: '100%',
        fontFamily: 'Arial, sans-serif',
        color: '#333',
      }}
    >
      <div style={{ gap: 30, display: 'flex' }}>
        <div style={{ flex: '1 1 auto', minWidth: 320 }}>
          {weather && (
            <div
              style={{
                marginTop: 20,
                border: '1px solid #ccc',
                padding: 15,
                borderRadius: 8,
              }}
            >
              <h2>üå¶Ô∏è –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞</h2>
              <p>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather.main.temp} ¬∞C</p>
              <p>–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {weather.main.feels_like} ¬∞C</p>
              <p>–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {weather.weather[0].description}</p>
              <p>–î–∞–≤–ª–µ–Ω–∏–µ: {weather.main.pressure} –≥–ü–∞</p>
              <p>–í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather.main.humidity} %</p>
              <p>
                –í–µ—Ç–µ—Ä: {weather.wind.speed} –º/—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {weather.wind.deg}¬∞
              </p>
              <p>–í–∏–¥–∏–º–æ—Å—Ç—å: {weather.visibility / 1000} –∫–º</p>
            </div>
          )}

          {soil && (
            <div
              style={{
                marginTop: 20,
                border: '1px solid #8b4513',
                padding: 15,
                borderRadius: 8,
                backgroundColor: '#f5f5dc',
              }}
            >
              <h2>üå± –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—á–≤—ã</h2>
              <p>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –≥–ª—É–±–∏–Ω–µ 10 —Å–º: {kelvinToCelsius(soil.t10)} ¬∞C</p>
              <p>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ (t0): {kelvinToCelsius(soil.t0)} ¬∞C</p>
              <p>–í–ª–∞–∂–Ω–æ—Å—Ç—å –ø–æ—á–≤—ã: {soil.humidity} %</p>
            </div>
          )}
        </div>

        <div
          style={{
            width: '100%',
            height: 600,
            borderRadius: 8,
            overflow: 'hidden',
            boxShadow: '0 0 12px rgba(0,0,0,0.1)',
            flex: '1 1 60%',
          }}
        >
          <Map />
        </div>
      </div>
    </div>
  );
}

function App() {
  const [showIntro, setShowIntro] = useState(true);
  const [showRegistration, setShowRegistration] = useState(false);
  const [exited, setExited] = useState(false);

  // –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" —Å–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è IntroModal, –∑–∞—Ç–µ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  const handleContinue = () => {
    setShowIntro(false);
    setShowRegistration(true);
  };

  // –ü—Ä–∏ –≤—ã—Ö–æ–¥–µ —Å–∫—Ä—ã–≤–∞–µ–º –∏ IntroModal, –∏ RegistrationModal
  const handleExit = () => {
    setExited(true);
    setShowIntro(false);
    setShowRegistration(false);
  };

  const handleRegistrationSuccess = () => {
    setShowRegistration(false);
  };

  const handleSettingsClick = () => {
    alert('–û—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  };

  return (
    <Router>
      {exited ? (
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª ¬´–≤—ã—Ö–æ–¥¬ª, –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —ç–∫—Ä–∞–Ω
        <IntroModal exited={true} />
      ) : showIntro ? (
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π IntroModal
        <IntroModal onContinue={handleContinue} onExit={handleExit} exited={false} />
      ) : showRegistration ? (
        // –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º RegistrationModal
        <RegistrationModal onSuccess={handleRegistrationSuccess} />
      ) : (
        // –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏ –º–∞—Ä—à—Ä—É—Ç—ã
        <>
          <ProfileHeader onSettingsClick={handleSettingsClick} />
          <Routes>
            <Route path="/" element={<MainPage />} />
            <Route path="/login" element={<Login />} />
            <Route path="/home" element={<Home />} />
            <Route path="/dashboard" element={<AgroDashboard />} />
            <Route path="/earthdata" element={<EarthData />} />
            <Route path="/chat" element={<Chat />} />
            <Route path="/farm" element={<AgroFarmPage />} />
            <Route path="/register" element={<RegistrationModal />} />
            <Route path="/intro-modal" element={<IntroModal />} />
          </Routes>
        </>
      )}
    </Router>
  );
}

export default App;
